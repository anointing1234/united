# Generated by Django 5.0.7 on 2025-09-05 08:14

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, help_text='User identifier (e.g., email or username)', max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Exchanged amount', max_digits=12)),
                ('from_currency', models.CharField(help_text='USD', max_length=100)),
                ('to_currency', models.CharField(help_text='EUR', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the exchange', max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Date and time of the exchange')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eur_usd', models.DecimalField(decimal_places=4, help_text='Exchange rate from EUR to USD', max_digits=10)),
                ('gbp_usd', models.DecimalField(decimal_places=4, help_text='Exchange rate from GBP to USD', max_digits=10)),
                ('eur_gbp', models.DecimalField(decimal_places=4, help_text='Exchange rate from EUR to GBP', max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('Ethereum', 'Ethereum'), ('Bitcoin', 'Bitcoin'), ('USDT', 'USDT')], help_text='The network for which this deposit address applies.', max_length=50, unique=True)),
                ('deposit_address', models.CharField(help_text='The deposit address for the given network.', max_length=255)),
                ('qr_code', models.ImageField(blank=True, help_text='Optional QR code for the deposit address.', null=True, upload_to='payment_gateways/')),
                ('instructions', models.TextField(blank=True, help_text='Additional instructions for deposits on this network.', null=True)),
            ],
            options={
                'verbose_name': 'Payment Gateway',
                'verbose_name_plural': 'Payment Gateways',
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('reset_code', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('account_id', models.CharField(blank=True, max_length=6, null=True, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Email')),
                ('username', models.CharField(blank=True, max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('cot_code', models.CharField(blank=True, max_length=6, null=True, unique=True)),
                ('tax_code', models.CharField(blank=True, max_length=6, null=True, unique=True)),
                ('imf_code', models.CharField(blank=True, max_length=6, null=True, unique=True)),
                ('account_type', models.CharField(choices=[('savings', 'Savings'), ('current', 'Current'), ('fixed', 'Fixed Deposit'), ('offshore', 'Off Shore')], default='savings', help_text='Type of bank account (e.g., Savings, Current, Fixed Deposit)', max_length=20)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('disabled', 'Disabled'), ('blocked', 'Blocked')], default='active', help_text='Account status: Active, Disabled, or Blocked', max_length=10)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('login_pin', models.CharField(blank=True, help_text='6-digit PIN for account login', max_length=6, null=True)),
                ('transaction_pin', models.CharField(blank=True, help_text='4-digit PIN for transactions', max_length=4, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('loan_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_credits', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_debits', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('gbp', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('eur', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('checking_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_balance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=255)),
                ('swift_code', models.CharField(blank=True, max_length=50, null=True)),
                ('routing_transit_number', models.CharField(blank=True, help_text='A 9-digit code used to identify the bank in US transactions.', max_length=9, null=True)),
                ('bank_address', models.CharField(blank=True, help_text="The physical address of the beneficiary's bank.", max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit'), ('prepaid', 'Prepaid')], default='debit', max_length=20)),
                ('vendor', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'MasterCard'), ('amex', 'American Express'), ('discover', 'Discover')], default='visa', max_length=20)),
                ('account', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked')], default='active', max_length=20)),
                ('card_password', models.CharField(blank=True, help_text='Password or PIN for the card', max_length=128, null=True)),
                ('expiry_date', models.DateField(default=accounts.models.default_expiry_date, help_text='Expiry date (2 years after purchase)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('TNX', models.CharField(blank=True, help_text='Transaction reference or ID', max_length=100, null=True)),
                ('network', models.CharField(blank=True, help_text='Network used for the deposit (e.g., Ethereum, Bitcoin)', max_length=50, null=True)),
                ('rate', models.DecimalField(decimal_places=2, default=1.0, help_text='Exchange rate at the time of deposit', max_digits=10)),
                ('account', models.CharField(choices=[('Savings_Account', 'Savings Account'), ('Checking_Account', 'Checking Account'), ('Loan_Account', 'Loan Account'), ('GBP_Account', 'GBP Wallet'), ('EUR_Account', 'EUR Wallet')], default='Savings_Account', help_text='The account selected for deposit', max_length=50)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoanRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Date when the request was made')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount requested', max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='USD', help_text='Currency of the loan (e.g., USD, EUR, GBP)', max_length=10)),
                ('loan_type', models.CharField(default='personal', help_text='Type of loan (e.g., personal, home, auto)', max_length=50)),
                ('reason', models.TextField(help_text='Reason for the loan request')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', help_text='Current status of the loan request', max_length=20)),
                ('term_months', models.PositiveIntegerField(blank=True, help_text='Loan term in months', null=True)),
                ('interest_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Annual interest rate (%)', max_digits=5, null=True)),
                ('collateral', models.TextField(blank=True, help_text='Collateral details (if any)', null=True)),
                ('approval_date', models.DateTimeField(blank=True, help_text='Date and time when the loan was approved', null=True)),
                ('disbursement_date', models.DateTimeField(blank=True, help_text='Date and time when the funds were disbursed', null=True)),
                ('repayment_start_date', models.DateField(blank=True, help_text='Date when repayment starts', null=True)),
                ('status_detail', models.CharField(blank=True, help_text='Additional details about the loan status', max_length=255, null=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Administrator who approved the loan', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_loans', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User who requested the loan', on_delete=django.db.models.deletion.CASCADE, related_name='loan_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('payment', 'Payment')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('reference', models.CharField(blank=True, help_text='Optional unique reference for the transaction', max_length=50, null=True, unique=True)),
                ('institution', models.CharField(blank=True, help_text='Institution involved in the transaction', max_length=100, null=True)),
                ('region', models.CharField(blank=True, help_text='Region where the transaction occurred', max_length=100, null=True)),
                ('from_account', models.CharField(blank=True, help_text='Debit account or source of funds', max_length=100, null=True)),
                ('to_account', models.CharField(blank=True, help_text='Credit account or destination of funds', max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance', models.CharField(default='USD', max_length=50)),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason', models.TextField(blank=True, null=True)),
                ('region', models.CharField(default='local', max_length=50)),
                ('charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='accounts.beneficiary')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransferCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tac_code', models.CharField(blank=True, help_text='TAC code for verification', max_length=10, null=True, unique=True)),
                ('tax_code', models.CharField(blank=True, help_text='Tax code for transactions', max_length=10, null=True, unique=True)),
                ('imf_code', models.CharField(blank=True, help_text='IMF code for international transactions', max_length=10, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='Code expiration time')),
                ('used', models.BooleanField(default=False, help_text='Has the code been used?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
